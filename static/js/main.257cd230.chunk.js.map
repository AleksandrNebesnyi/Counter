{"version":3,"sources":["Counter/Controls.jsx","Counter/Counter.jsx","App.js","reportWebVitals.js","index.js","Counter/Counter.module.css"],"names":["Controls","onIncrement","onDecrement","className","s","type","onClick","Counter","state","value","props","initialValue","handleIncrement","event","console","log","setState","prevState","handleDecrement","this","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wOAgBeA,EAdC,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,YAAf,OACZ,sBAAKC,UAAWC,IAAC,kBAAjB,UACO,wBAAQC,KAAK,SACbC,QAASL,EADT,mFAIE,wBAAQI,KAAK,SACbC,QAASJ,EADT,uFCFPK,E,4MAeHC,MAAO,CAEJC,MAAO,EAAKC,MAAMC,c,EAGpBC,gBAAkB,SAACC,GACfC,QAAQC,IAAI,2GAMZ,EAAKC,UAAS,SAAAC,GAAS,MAAG,CAACR,MAAMQ,EAAUR,MAAM,O,EAMrDS,gBAAiB,SAACL,GAChBC,QAAQC,IAAI,2GACZ,EAAKC,UAAS,SAACC,GAAa,MAAM,CAChCR,MAAMQ,EAAUR,MAAM,O,4CAI1B,WAGI,OACE,sBAAKN,UAAWC,IAAEG,QAAlB,UACC,sBAAMJ,UAAWC,IAAC,eAAlB,SAAuCe,KAAKX,MAAMC,QAClD,cAAC,EAAD,CACAR,YAAakB,KAAKP,gBAClBV,YAAaiB,KAAKD,yB,GAhDPE,aAAhBb,EAECc,aAAc,CACjBV,aAAc,GAmEHJ,QChEAe,MATf,WACE,OAGE,cAAC,EAAD,CAASX,aAAc,MCKZY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,QAAU,yBAAyB,kBAAoB,mCAAmC,eAAiB,mC","file":"static/js/main.257cd230.chunk.js","sourcesContent":["import s from './Counter.module.css' \r\n\r\nconst Controls =({onIncrement, onDecrement}) => (\r\n    <div className={s['Counter__controls']}>\r\n           <button type=\"button\" \r\n           onClick={onIncrement}>\r\n              Увеличить на 1\r\n                </button>\r\n             <button type=\"button\" \r\n             onClick={onDecrement}>\r\n             Уменьшить на 1\r\n             </button>\r\n            </div>\r\n);\r\n\r\n\r\nexport default Controls;","import s from './Counter.module.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Controls from  './Controls'\r\n\r\n\r\nclass Counter extends Component {\r\n\r\nstatic defaultProps ={\r\n    initialValue :0,\r\n}\r\nstatic  propTypes ={\r\n    initialValue:PropTypes.number,\r\n}\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state={\r\n    //         value:5,\r\n    //     };\r\n    // }\r\n\r\n   state ={\r\n    //    value:5,\r\n      value: this.props.initialValue,\r\n   }\r\n\r\n    handleIncrement = (event)=> {\r\n        console.log('Кликнули увеличить');\r\n        // console.log(event.target);\r\n        // const target = event.target\r\n        // const {target} = event\r\n        // console.log(target);\r\n\r\n        this.setState(prevState=>({value:prevState.value+1}))\r\n\r\n        // this.setState((prevState)=>{return{\r\n        //     value:prevState.value+1,\r\n        // }})\r\n           }\r\n    handleDecrement= (event)=>{\r\n      console.log('Кликнули уменьшить');\r\n      this.setState((prevState)=>{return{\r\n        value:prevState.value-1,\r\n    }})\r\n\r\n    }\r\n    render() {\r\n       \r\n    \r\n        return (\r\n          <div className={s.Counter}>\r\n           <span className={s['Counter__value']}>{this.state.value}</span>\r\n           <Controls \r\n           onIncrement={this.handleIncrement}\r\n           onDecrement={this.handleDecrement}\r\n           />\r\n\r\n\r\n\r\n    \r\n           {/* <div className={s['Counter__controls']}>\r\n           <button type=\"button\" \r\n           onClick={this.handleIncrement}>\r\n              Увеличить на 1\r\n                </button>\r\n             <button type=\"button\" \r\n             onClick={this.handleDecrement}>\r\n             Уменьшить на 1\r\n             </button>\r\n            </div> */}\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\n\r\nexport default Counter;","\nimport Counter from './Counter/Counter.jsx'\n\nfunction App() {\n  return (\n\n\n    <Counter initialValue={10} />\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"Counter_Counter__3vmnN\",\"Counter__controls\":\"Counter_Counter__controls__rqReE\",\"Counter__value\":\"Counter_Counter__value__2z4mT\"};"],"sourceRoot":""}